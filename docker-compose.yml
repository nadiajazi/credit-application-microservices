services:
  config-server:
    image: jazinadia11/config-server:latest
    container_name: config-server
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=native
    networks:
      - microservices-net

  discovery:
    image: jazinadia11/discovery:latest
    container_name: discovery
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_URL=http://config-server:8888
    depends_on:
      - config-server
    networks:
      - microservices-net

  notification:
    image: jazinadia11/notification:latest
    container_name: notification
    ports:
      - "8040:8040"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_URL=http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:mysql://ms_my_sql:3306/notification
      - SPRING_DATASOURCE_USERNAME=nadia
      - SPRING_DATASOURCE_PASSWORD=nadia
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=PLAINTEXT://kafka:9092
      - SPRING_MAIL_HOST=ms_mail_dev
      - SPRING_MAIL_PORT=1025
      - SPRING_MAIL_USERNAME=nadia
      - SPRING_MAIL_PASSWORD=nadia
    depends_on:
      - config-server
      - discovery
      - ms_my_sql
      - kafka
      - ms_mail_dev
      - core
      - payment
    networks:
      - microservices-net

  payment:
    image: jazinadia11/payment:latest
    container_name: payment
    ports:
      - "8090:8090"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_URL=http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:postgresql://ms_pg_sql:5432/payment
      - SPRING_DATASOURCE_USERNAME=nadia
      - SPRING_DATASOURCE_PASSWORD=nadia
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=PLAINTEXT://kafka:9092
      - SPRING_APPLICATION_CONFIGURATION_USER_URL=http://core:8060/api/v1
    depends_on:
      - config-server
      - discovery
      - ms_pg_sql
      - kafka
      - core
    networks:
      - microservices-net

  core:
    image: jazinadia11/core:latest
    container_name: core
    ports:
      - "8060:8060"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_URL=http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:mysql://ms_my_sql:3306/main
      - SPRING_DATASOURCE_USERNAME=nadia
      - SPRING_DATASOURCE_PASSWORD=nadia
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=PLAINTEXT://kafka:9092
      - PAYMENT_URL=http://payment:8090/api/v1/payment
    depends_on:
      - config-server
      - discovery
      - ms_my_sql
      - kafka
    networks:
      - microservices-net

  gateway:
    image: jazinadia11/gateway:latest
    container_name: gateway
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_URL=http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:8761/eureka
    depends_on:
      - config-server
      - discovery
    networks:
      - microservices-net

  frontend:
    build:
      context: C:/Users/asus/Desktop/CreditApplication/FrontEnd/creditapplication
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:80"
    networks:
      - microservices-net

  ms_pg_sql:
    container_name: ms_pg_sql
    image: postgres:latest
    environment:
      POSTGRES_USER: nadia
      POSTGRES_PASSWORD: nadia
      POSTGRES_DB: payment
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - microservices-net
    restart: unless-stopped

  ms_my_sql:
    container_name: ms_my_sql
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root-password
      MYSQL_USER: nadia
      MYSQL_PASSWORD: nadia
      MYSQL_DATABASE: notification
      MSDATA: /var/lib/mysql/data
    volumes:
      - mysql:/data/mysql
    ports:
      - 3308:3306
    networks:
      - microservices-net
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - microservices-net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "news:1:3"
      KAFKA_OFFSETS_RETENTION_MINUTES: 60
    networks:
      - microservices-net

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    depends_on:
      - kafka
    ports:
      - "8033:9000"
    environment:
      KAFKA_BROKER_CONNECT: PLAINTEXT://kafka:9092
      JVM_OPTS: "-Xms32M -Xmx64M"
    networks:
      - microservices-net

  ms_mail_dev:
    container_name: ms_mail_dev
    image: maildev/maildev
    ports:
      - 1080:1080
      - 1025:1025
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge

volumes:
  postgres:
  mysql:
